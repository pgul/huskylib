# $Id$
# Makefile to build HUSKYLIB with Mingw32 from Cygwin
# No support for the Husky build environment.

# Uncomment this for compile info for gdb and display more compiler warnings
DEBUG	= -g -pedantic

# Uncomment this for strip all simbols from binaries to reduce file sizes
#STRIP	= -s


## programs ##

#use this line if you are using MINGW32 on a Windows box
GCC	= gcc
AR	= ar
RANLIB	= ranlib

#use this line if you are using MINGW32 CPD on a Unix box as cross compiler
#CC	= i386-mingw32-gcc
#AR	= i386-mingw32-ar
#RANLIB	= i386-mingw32-ranlib
RM	= rm

## file suffixes ##

C	= .c
OBJ	= .o
LIB	= .a
EXE	= .exe
DLL	= .dll

## program options ##

# compiler defines
CDEFS	=
# common compiler options
CFLAGS	= -Wall -mno-cygwin -O3
# options for compile only (link is off)
OBJOPT	= -c
# options for build static library
LIBOPT	= -static
# options for build dll
DLLOPT  = -shared
# option for specify output file name
NAMEOPT	= -o
# options for $(AR) program
ARFLAGS	= rs

# Prefix to construct static library name
LIBPREFIX=lib
# Prefix to construct dll name
DLLPREFIX=
# Suffix to construct library name
LIBSUFFIX=cyg
# Suffix to construct dll name
DLLSUFFIX=

.PHONY:	distclean clean all static dll programs default

default:
	@echo Run 'make dll' to build dll version \($(DLLTARGET), $(PROGRAMS)\)
	@echo Run 'make static' to build static version \($(TARGET), $(PROGRAMS)\)
	@echo Run 'make programs' to build static version of programs \($(PROGRAMS)\)
	@echo Run 'make all' to build all above

include makefile.inc

# libraries need to build binary file
LIBS	+=

## other, usualy not modify below ##
CYGWIN_VERSION	= $(shell uname -r)

ifeq ( , $(findstring "1.3.9", $(CYGWIN_VERSION)) )
ifeq ( , $(findstring "1.3.10", $(CYGWIN_VERSION)) )
ifeq ( , $(findstring "1.3.11", $(CYGWIN_VERSION)) )
 # new cygwin require library mingwex for build with '-mno-cygwin' option
LIBS	+= -lmingwex
endif
endif
endif

CFLAGS	+= -I$(H_DIR) $(DEBUG)

all:	static dll programs

static:	$(TARGETLIB)
dll:	$(TARGETDLL)
programs:  $(PROGRAMS)

%$(EXE): $(SRC_DIR)%$(C) $(TARGETLIB)
	$(CC) $(STRIP) $(CFLAGS) $(CDEFS) $(NAMEOPT)$@ $^ $(LIBS)

%$(OBJ): $(SRC_DIR)%$(C)
	$(CC) $(CFLAGS) $(CDEFS) $(OBJOPT) $<

$(TARGETLIB):	$(OBJS)
	$(AR) $(ARFLAGS) $@ $?
#	$(RANLIB) $@   # 'ar rs' doing this
	
$(TARGETDLL):	$(OBJS)
	$(CC) $(DLLOPT) $(CFLAGS) $(NAMEOPT)$@ $^


clean:
	-$(RM) $(RMOPT) *$(OBJ)

distclean:
	-$(RM) $(RMOPT) $(TARGETDLL) $(TARGETLIB) $(PROGRAMS)
